{"version":3,"sources":["components/stock/stock.js","utils/index.js","assets/hourglass.gif","components/stockCard/stockCard.js","App.js","index.js"],"names":["Stock","value","updateHandler","useState","status","setStatus","quote","lastPrice","change","pChange","useEffect","className","class","onClick","fetchRandomStock","a","fetch","DEV","method","resp","ok","Error","json","StockCard","content","stockData","setStockData","isLoading","setIsLoading","error","setError","updateStockHandler","result","name","last_price","pchange","message","src","loading","alt","App","ReactDOM","render","document","getElementById"],"mappings":"kSAkCeA,EA/BD,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,cACtB,EAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACOC,EAAsCL,EAAtCK,MAAOC,EAA+BN,EAA/BM,UAAWC,EAAoBP,EAApBO,OAAQC,EAAYR,EAAZQ,QAUjC,OATAC,qBAAU,WAERL,EADEG,GAAU,EACF,KAGA,UAET,CAACP,IAGH,sBAAKU,UAAU,QAAf,UACC,yDAGA,sBAAKA,UAAU,aAAf,UACC,sBAAKA,UAAU,aAAf,UACC,sBAAKA,UAAU,gBAAf,cAAgC,mBAAGC,MAAM,sBAAzC,IAAiEL,EAAjE,OACA,sBAAKI,UAAS,uBAAkBP,GAAhC,UACC,mBAAGO,UAAS,8BAAyBP,KADtC,IACoDI,EADpD,KAC8DC,EAD9D,WAID,sBAAKE,UAAU,eAAf,cAAgCL,EAAhC,UAED,wBAAQO,QAASX,EAAjB,2BC1BUY,EAAgB,uCAAG,4BAAAC,EAAA,4DACd,UADc,SAEZC,MAAMC,oCAAc,CACtCC,OAAQ,QAHsB,WAEzBC,EAFyB,QAKtBC,GALsB,sBAMxB,IAAIC,MAAM,yBANc,gCAQxBF,EAAKG,QARmB,2CAAH,qDCHd,MAA0B,sCCiD1BC,G,MA3CG,WAEjB,IAyBIC,EAzBJ,EAAkCrB,mBAAS,IAA3C,mBAAOsB,EAAP,KAAkBC,EAAlB,KACA,EAAkCvB,oBAAS,GAA3C,mBAAOwB,EAAP,KAAkBC,EAAlB,KACA,EAA0BzB,qBAA1B,mBAAO0B,EAAP,KAAcC,EAAd,KAEMC,EAAkB,uCAAG,4BAAAhB,EAAA,6DACzBa,GAAa,GADY,kBAGLd,IAHK,OAGpBkB,EAHoB,OAI1BN,EAAa,CACZpB,MAAO0B,EAAOC,KACd1B,UAAWyB,EAAOE,WAClB1B,OAAQwB,EAAOxB,OACfC,QAASuB,EAAOG,UARS,gDAY1BL,EAAS,KAAMM,SAZW,QAczBR,GAAa,GAdY,yDAAH,qDA8BxB,OAbAlB,qBAAU,WACRqB,MACC,IAGCJ,EACHH,EAAU,qBAAKa,IAAKC,EAASC,IAAI,cACtBZ,GAAcE,GAEdF,GAAaE,IACxBL,EAAU,kCAAKK,EAAL,QAFVL,EAAU,cAAC,EAAD,CAAOvB,MAAOwB,EAAWvB,cAAe6B,IAMlD,qBAAKpB,UAAU,aAAf,SACEa,MCjCWgB,MARf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,OCDN8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.dd3e2c71.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport './style.css';\n\nconst Stock = ({value, updateHandler}) => {\n\tconst [status, setStatus] = useState();\n\tconst {quote, lastPrice, change, pChange } = value;\n\tuseEffect(() => {\n\t\tif(change >= 0) {\n\t\t\tsetStatus(\"up\");\n\t\t}\n\t\telse {\n\t\t\tsetStatus(\"down\");\n\t\t}\n\t}, [value])\n\n\treturn (\n\t\t<div className='stock'>\n\t\t\t<header>\n\t\t\t\tRandom Stock Picker\n\t\t\t</header>\n\t\t\t<div className=\"stock-info\">\n\t\t\t\t<div className=\"price-info\">\n\t\t\t\t\t<div className=\"current-price\"> <i class=\"fas fa-rupee-sign\" /> {lastPrice} </div>\n\t\t\t\t\t<div className={`price-change ${status}`}>\n\t\t\t\t\t\t<i className={`fas fa-arrow-circle-${status}`} /> {change} ({pChange}%)\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"company-name\"> {quote} </div>\n\t\t\t</div>\n\t\t\t<button onClick={updateHandler} > Refresh </button>\n\t\t</div>\n\t);\n}\n\nexport default Stock;\n","const DEV = 'http://localhost:8000/api/'\nconst PROD = 'https//randomstocknse.herokuapp.com/api/'\n\nexport const fetchRandomStock = async () => {\n\tconst endpoint = 'random/'\n\tconst resp = await fetch(DEV+endpoint, {\n\t\tmethod: 'GET',\n\t})\n\tif(!resp.ok) {\n\t\tthrow new Error('Something went wrong!');\n\t}\n\treturn resp.json();\n}\n","export default __webpack_public_path__ + \"static/media/hourglass.3da72fbb.gif\";","import {useEffect, useState} from 'react';\nimport Stock from '../stock/stock';\nimport { fetchRandomStock } from '../../utils';\nimport loading from '../../assets/hourglass.gif';\nimport './style.css';\n\nconst StockCard = () => {\n\n\tconst [stockData, setStockData] = useState({});\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState();\n\n\tconst updateStockHandler = async () => {\n\t  setIsLoading(true);\n\ttry {\n\t\tconst result = await fetchRandomStock();\n\t\tsetStockData({\n\t\t\tquote: result.name,\n\t\t\tlastPrice: result.last_price,\n\t\t\tchange: result.change,\n\t\t\tpChange: result.pchange\n\t\t})\n\t}\n\tcatch (error) {\n\t\tsetError(error.message);\n\t}\n\t  setIsLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t  updateStockHandler();\n\t}, []);\n\n\tlet content;\n\tif (isLoading) {\n\t\tcontent = <img src={loading} alt=\"hourglass\"/>;\n\t} else if (!isLoading && !error) {\n\t\tcontent = <Stock value={stockData} updateHandler={updateStockHandler}/>;\n\t} else if (!isLoading && error) {\n\t\tcontent = <p> {error} </p>\n\t}\n\n\treturn (\n\t\t<div className='stock-card'>\n\t\t\t{content}\n\t\t</div>\n\t);\n}\n\nexport default StockCard;\n","import './App.css';\nimport StockCard from './components/stockCard/stockCard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StockCard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />\n ,document.getElementById('root')\n);\n\n"],"sourceRoot":""}